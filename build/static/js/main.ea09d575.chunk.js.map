{"version":3,"sources":["App.js","index.js"],"names":["inputEl","useRef","state","setFn","set","key","val","Array","isArray","old","String","localStorage","getItem","JSON","parse","e","useState","tarefa","lista","window","addEventListener","Object","keys","forEach","hasOwnProperty","setItem","stringify","dom","id","Math","random","slice","current","focus","filter","item","ref","type","placeholder","value","onChange","target","className","onClick","disabled","length","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAGe,G,MAAA,WACX,IAAMA,EAAUC,iBAAO,MACjBC,EAAQ,GACVC,EAAQ,GACRC,EAAM,SAACC,EAAKC,GACJC,MAAMC,QAAQN,EAAMG,IACpBF,EAAME,IAAK,SAAAI,GAAS,OAAOH,EAAIG,OACJ,kBAAfP,EAAMG,IAAqBH,EAAMG,aAAgBK,SAC7DP,EAAME,GAAKC,IAEnBA,EAAMK,aAAaC,QAAQ,UAC/B,IACIN,EAAMO,KAAKC,MAAMR,GACnB,MAAOS,IAbQ,MAccC,mBAASV,GAdvB,mBAchBJ,EAAMe,OAdU,KAcFd,EAAMc,OAdJ,KAejBX,EAAMK,aAAaC,QAAQ,SAC3B,IACIN,EAAMO,KAAKC,MAAMR,GACnB,MAAOS,IAlBQ,MAmBYC,mBAASV,GAnBrB,mBAmBhBJ,EAAMgB,MAnBU,KAmBHf,EAAMe,MAnBH,KA2BjBC,OAAOC,iBACH,gBARgB,WAChBC,OAAOC,KAAKpB,GAAOqB,SAAQ,SAAClB,GACnBM,aAAaa,eAAenB,IAEjCgB,OAAOC,KAAKpB,GAAOqB,SAAQ,SAAClB,GAAD,OAASM,aAAac,QAAQpB,EAAKQ,KAAKa,UAAUxB,EAAMG,cAO3F,IAAMsB,EACM,SAACrB,GACLF,EAAI,UAAW,kBAAME,MAFvBqB,EAIG,WACDvB,EAAI,SAAU,SAACK,GACX,MAAM,GAAN,mBAAWA,GAAX,CAAgB,CACZmB,GAAI,EAAIC,KAAKC,SACbxB,IAAKJ,EAAMe,OAAOc,cAG1B3B,EAAI,UAAW,iBAAM,MACrBJ,EAAQgC,QAAQC,SAZlBN,EAcG,SAACC,GACFxB,EAAI,SAAU,SAACK,GACX,OAAOA,EAAIyB,QAAO,SAAAC,GAAI,OAAIA,EAAKP,KAAOA,SAIlD,OACI,yBAAKA,GAAG,SACJ,6BACI,2BACIQ,IAAKpC,EACLqC,KAAK,OACLC,YAAY,sBACZC,MAAOrC,EAAMe,OACbuB,SAAU,SAAAzB,GAAC,OAAIY,EAAWZ,EAAE0B,OAAOF,UACvC,4BACIG,UAAU,MACVC,QAAS,kBAAMhB,KACfiB,UAAW1C,EAAMe,OAAO4B,QACxB,0BAAMH,UAAU,OAAhB,OAGR,4BACKxC,EAAMgB,MAAM4B,KAAI,SAAAX,GACb,OACI,wBAAI9B,IAAK8B,EAAKP,IACV,8BAAOO,EAAK7B,KACZ,4BAAQqC,QAAS,kBAAMhB,EAAQQ,EAAKP,MAChC,+CCvEhCmB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ea09d575.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './App.css';\r\n\r\nexport default () => {\r\n    const inputEl = useRef(null);\r\n    const state = {},\r\n        setFn = {},\r\n        set = (key, val) => {\r\n            if (Array.isArray(state[key]))\r\n                setFn[key](old => { return val(old) });\r\n            else if (typeof state[key] === 'string' || state[key] instanceof String)\r\n                setFn[key](val);\r\n        };\r\n    let val = localStorage.getItem('tarefa');\r\n    try {\r\n        val = JSON.parse(val);\r\n    } catch (e) { };\r\n    [state.tarefa, setFn.tarefa] = useState(val);\r\n    val = localStorage.getItem('lista');\r\n    try {\r\n        val = JSON.parse(val);\r\n    } catch (e) { };\r\n    [state.lista, setFn.lista] = useState(val);\r\n    const saveToLocal = () => {\r\n        Object.keys(state).forEach((key) => {\r\n            if (!localStorage.hasOwnProperty(key))\r\n                return;\r\n            Object.keys(state).forEach((key) => localStorage.setItem(key, JSON.stringify(state[key])));\r\n        });\r\n    };\r\n    window.addEventListener(\r\n        'beforeunload',\r\n        saveToLocal\r\n    );\r\n    const dom = {\r\n        update: (val) => {\r\n            set('tarefa', (() => val));\r\n        },\r\n        add: () => {\r\n            set('lista', ((old) => {\r\n                return [...old, {\r\n                    id: 1 + Math.random(),\r\n                    val: state.tarefa.slice()\r\n                }]\r\n            }));\r\n            set('tarefa', (() => ''));\r\n            inputEl.current.focus();\r\n        },\r\n        del: (id) => {\r\n            set('lista', ((old) => {\r\n                return old.filter(item => item.id !== id)\r\n            }));\r\n        }\r\n    };\r\n    return (\r\n        <div id=\"to-do\">\r\n            <div>\r\n                <input\r\n                    ref={inputEl}\r\n                    type=\"text\"\r\n                    placeholder=\"Adicione uma tarefa\"\r\n                    value={state.tarefa}\r\n                    onChange={e => dom.update(e.target.value)} />\r\n                <button\r\n                    className=\"add\"\r\n                    onClick={() => dom.add()}\r\n                    disabled={!state.tarefa.length}>\r\n                    <span className=\"add\">+</span>\r\n                </button>\r\n            </div>\r\n            <ul>\r\n                {state.lista.map(item => {\r\n                    return (\r\n                        <li key={item.id}>\r\n                            <span>{item.val}</span>\r\n                            <button onClick={() => dom.del(item.id)}>\r\n                                <span>&times;</span>\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}